#!/system/bin/sh

# ArchiDroid FIRSTBOOT Script
# JustArchi@JustArchi.net

# Not Disabled
#exit 0

DBUPDATE() {
	# Thanks to idcrisis, modified by JustArchi
	WHAT=$1
	VARIABLE=$2
	VAL=$3
	DONE=0

	while [ $DONE -ne 1 ] ; do
		# Try to update value first if exists
		busybox sync
		CHECK=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "update $WHAT set value='$VAL' where name='$VARIABLE';" 2>/dev/null`
		busybox sync
		
		# See if it worked
		VAL1=""
		VAL1=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "select value from $WHAT where name='$VARIABLE';" 2>/dev/null`
		
		# If not create it
		if [ "$VAL1" != "" ]; then
			# Looks good
			DONE=1
			return 0
		else
			#ID=""
			#ID=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "select max(_id)+100 from $WHAT;"`
			#if [ "$ID" == "" ]; then 
			#	ID='null'
			#fi
			ID='null'

			CHECK=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "insert into $WHAT values($ID, '$VARIABLE', '$VAL');" 2>/dev/null`
			busybox sync
		fi
		
		# Check if in fact we modified that
		VAL1=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "select value from $WHAT where name='$VARIABLE';" 2>/dev/null`
		if [ "$VAL1" != "" ]; then
			# Looks good
			DONE=1
			return 0
		fi
	done
}

# Make sure that our folder is still here
if [ ! -d /data/media/0/ArchiDroid ]; then
	mkdir -p /data/media/0/ArchiDroid
fi

# Now we need to make sure that this is background process to prevent slowing down bootup
if [ ! -e /data/media/0/ArchiDroid/RUNONCE_BACKGROUND ]; then
	# We're not running in background, let's start a child and tell him that he's running in background
	touch /data/media/0/ArchiDroid/RUNONCE_BACKGROUND
	sh $0 &
	
	# Nothing to do here anymore, exit call
	exit 1
else
	# We're running in background so let's proceed
	rm -f /data/media/0/ArchiDroid/RUNONCE_BACKGROUND
fi

# We don't need to reload anything for now
ADRELOAD=0

# Cool ArchiDroid Banner
#if [ -e /system/bin/boot-dmesg ]; then
#	ADBANNER=1
#else
	ADBANNER=0
#fi

# We want some sqlite3 updates and settings but only if INSTALL mode is enabled
if [ -e /data/media/0/ArchiDroid/INSTALL ]; then
	if [ -d /data/media/0/ArchiDroid/FIRSTBOOT/DATA ]; then
		cd /data/media/0/ArchiDroid/FIRSTBOOT/DATA
		ADMANY=`ls | wc -l`
	fi
	DBUPDATE=1
	ADRELOAD=1
elif [ -e /data/media/0/ArchiDroid/UPDATE ]; then
	DBUPDATE=0
	ADMANY=0
else
	# Panic
	exit 1
fi

# ArchiDroid Semaphore
# Wait until we see some android processes to consider boot is more or less complete (credits to AndiP71)
while ! pgrep com.android ; do

	if [ $ADBANNER -eq 1 ]; then
		echo ""
		echo "*******************************************************************************"
		echo "*             _                _      _  ____               _      _          *"
		echo "*            / \    _ __  ___ | |__  (_)|  _ \  _ __  ___  (_)  __| |         *"
		echo "*           / _ \  | '__|/ __|| '_ \ | || | | || '__|/ _ \ | | / _\` |         *"
		echo "*          / ___ \ | |  | (__ | | | || || |_| || |  | (_) || || (_| |         *"
		echo "*         /_/   \_\|_|   \___||_| |_||_||____/ |_|   \___/ |_| \__,_|         *"
		echo "*                                                                             *"
		echo "*******************************************************************************"
		echo "*                  _                       _  _                               *"
		echo "*                 | |     ___    __ _   __| |(_) _ __    __ _                 *"
		echo "*                 | |    / _ \  / _\` | / _\` || || '_ \  / _\` |                *"
		echo "*                 | |___| (_) || (_| || (_| || || | | || (_| |                *"
		echo "*                 |_____|\___/  \__,_| \__,_||_||_| |_| \__, |                *"
		echo "*                                                       |___/                 *"
		echo "*******************************************************************************"
		echo "*            root@ArchiDroid:~# Waiting for ArchiDroid to load...             *"
		echo "*******************************************************************************"
		echo ""
	fi
	
	# Now let's MAKE SURE that our settings are in fact applied, only if we don't have shared_prefs already (prevent non-clean override)
	if [ $ADMANY -gt 0 ]; then
	cd /data/media/0/ArchiDroid/FIRSTBOOT/DATA
		for FOLDER in * ; do
			if [ -d /data/data/$FOLDER ]; then
				if [ ! -d /data/data/$FOLDER/shared_prefs ]; then
					mv $FOLDER/* /data/data/$FOLDER
					
					# Let's set basic permissions because ArchiDroid_Permfix will fix it anyway really soon
					ADOWNER=`ls -ld /data/data/$FOLDER | awk '{print $3}'`
					chown -hR $ADOWNER.$ADOWNER /data/data/$FOLDER
					chmod -R 755 /data/data/$FOLDER
					
					# And we're done!
					rm -Rf $FOLDER
					ADOWNER=""
					((ADMANY--))
				else
					rm -Rf $FOLDER
					ADOWNER=""
					((ADMANY--))
				fi
			fi
		done
		#ADMANY=`ls | wc -l`
	fi
	
	if [ $DBUPDATE -eq 1 ]; then
		if [ -e /data/data/com.android.providers.settings/databases/settings.db ]; then
			DBUPDATE global transition_animation_scale 0.5
			DBUPDATE global animator_duration_scale 0.5
			DBUPDATE global window_animation_scale 0.5
			DBUPDATE global install_non_market_apps 1
			DBUPDATE system lockscreen_ripple_effect 2

			# And don't execute twice
			DBUPDATE=0
		fi
	fi
	
	# Sleeping time
	sleep 2
done

# Now that is checked, let's just wait another tiny little bit
sleep 10

# If we have any more runonce scripts then it's the right place for that


# I'm runonce script so let's clean everything and delete myself

# NOTICE
# ArchiDroid has sysro/sysrw support, change that to remount system rw if needed
rm -f /data/media/0/ArchiDroid/INSTALL
rm -f /data/media/0/ArchiDroid/UPDATE
rm -Rf /data/media/0/ArchiDroid/FIRSTBOOT
rm -Rf /data/media/0/vrtheme-backup
sysrw
rm -f $0
sysro


# Execute hot reboot if we need it
if [ $ADRELOAD -eq 1 ]; then
	sync
	killall system_server
fi

# Finish
exit 0