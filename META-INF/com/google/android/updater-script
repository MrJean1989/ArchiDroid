#
# Updater-script for ArchiDroid
#
ui_print(">>> ArchiDroid is now loading...");
sleep (1);
# TODO some checks
ui_print("root@ArchiDroid:~# Ready!");
set_progress(0.01);
sleep (2);

ui_print("root@ArchiDroid:~# Unmounting Partitions");
assert(unmount("/system") || ui_print("(system is unmounted already)"));
assert(unmount("/data") || ui_print("(data is unmounted already)"));
assert(unmount("/cache") || ui_print("(cache is unmounted already)"));
assert(unmount("/preload") || ui_print("(preload is unmounted already)"));

set_progress(0.02);

ui_print("root@ArchiDroid:~# Formatting Partitions");
format("ext4", "EMMC", "/dev/block/mmcblk0p8", "0");
format("ext4", "EMMC", "/dev/block/mmcblk0p9", "0");
format("ext4", "EMMC", "/dev/block/mmcblk0p10", "0");

set_progress(0.05);

ui_print("root@ArchiDroid:~# Checking Partitions For Errors");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p8");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p9");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p10");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p12");

set_progress(0.06);

ui_print("root@ArchiDroid:~# Mounting Partitions");
assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p9", "/system") || ui_print("(system is mounted already)"));
assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));

set_progress(0.07);
package_extract_file("_archidroid/scripts/bash", "/tmp/bash");
set_perm(0, 0, 0777, "/tmp/bash");

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Formatting /data excluding /data/media");
	package_extract_file("_archidroid/scripts/wipe.sh", "/tmp/wipe.sh");
	set_perm(0, 0, 0777, "/tmp/wipe.sh");
	run_program("/tmp/wipe.sh");
endif;

if file_getprop("/tmp/aroma-data/efs.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Backing Up /efs");
	package_extract_file("_archidroid/scripts/efs_backup.sh", "/tmp/efs_backup.sh");
	set_perm(0, 0, 0777, "/tmp/efs_backup.sh");
	run_program("/tmp/efs_backup.sh");
endif;

set_progress(0.08);

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Cleaning cache, dalvik cache and resource cache");
	delete_recursive("/data/dalvik-cache");
	delete_recursive("/dalvik/dalvik-cache");
	delete_recursive("/data/resource-cache");
endif;

ui_print("root@ArchiDroid:~# Executing Archi's Scripts");
delete_recursive("/data/media/0/archidroid");
package_extract_file("_archidroid/scripts/media2zero.sh", "/tmp/media2zero.sh");
set_perm(0, 0, 0777, "/tmp/media2zero.sh");
run_program("/tmp/media2zero.sh");

sleep (1);

package_extract_file("_archidroid/scripts/archidroidmode.sh", "/tmp/archidroidmode.sh");
set_perm(0, 0, 0777, "/tmp/archidroidmode.sh");

if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "1" then
	run_program("/tmp/archidroidmode.sh", "install");
endif;
if file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2" then
	run_program("/tmp/archidroidmode.sh", "update");
endif;

set_progress(0.09);

set_progress(0.1);

ui_print("root@ArchiDroid:~# Flashing ArchiDroid Core");
show_progress(0.4, 1139);
package_extract_dir("system", "/system");

ui_print("root@ArchiDroid:~# Flashing ArchiDroid Init Scripts");
### IMPORTANT ###
package_extract_dir("_archidroid/auto", "/");
### IMPORTANT ###

run_program("/sbin/sync");

set_progress(0.51);

if file_getprop("/tmp/aroma-data/superuser.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Flashing SuperSU instead of SuperUser");
	package_extract_dir("_archidroid/apps/supersu", "/");
endif;

ui_print("root@ArchiDroid:~# Creating symlinks");
symlink("toolbox", "/system/bin/cat");
symlink("toolbox", "/system/bin/chmod");
symlink("toolbox", "/system/bin/chown");
symlink("toolbox", "/system/bin/cmp");
symlink("toolbox", "/system/bin/date");
symlink("toolbox", "/system/bin/dd");
symlink("toolbox", "/system/bin/df");
symlink("toolbox", "/system/bin/dmesg");
symlink("toolbox", "/system/bin/getevent");
symlink("toolbox", "/system/bin/getprop");
symlink("toolbox", "/system/bin/hd");
symlink("toolbox", "/system/bin/id");
symlink("toolbox", "/system/bin/ifconfig");
symlink("toolbox", "/system/bin/iftop");
symlink("toolbox", "/system/bin/insmod");
symlink("toolbox", "/system/bin/ioctl");
symlink("toolbox", "/system/bin/ionice");
symlink("toolbox", "/system/bin/kill");
symlink("toolbox", "/system/bin/ln");
symlink("toolbox", "/system/bin/log");
symlink("toolbox", "/system/bin/ls");
symlink("toolbox", "/system/bin/lsmod");
symlink("toolbox", "/system/bin/lsof");
symlink("toolbox", "/system/bin/md5");
symlink("toolbox", "/system/bin/mkdir");
symlink("toolbox", "/system/bin/mount");
symlink("toolbox", "/system/bin/mv");
symlink("toolbox", "/system/bin/nandread");
symlink("toolbox", "/system/bin/netstat");
symlink("toolbox", "/system/bin/newfs_msdos");
symlink("toolbox", "/system/bin/notify");
symlink("toolbox", "/system/bin/playback");
symlink("toolbox", "/system/bin/printenv");
symlink("toolbox", "/system/bin/ps");
symlink("toolbox", "/system/bin/reboot");
symlink("toolbox", "/system/bin/renice");
symlink("toolbox", "/system/bin/rm");
symlink("toolbox", "/system/bin/rmdir");
symlink("toolbox", "/system/bin/rmmod");
symlink("toolbox", "/system/bin/route");
symlink("toolbox", "/system/bin/schedtop");
symlink("toolbox", "/system/bin/sendevent");
symlink("toolbox", "/system/bin/setconsole");
symlink("toolbox", "/system/bin/setprop");
symlink("toolbox", "/system/bin/sleep");
symlink("toolbox", "/system/bin/smd");
symlink("toolbox", "/system/bin/start");
symlink("toolbox", "/system/bin/stop");
symlink("toolbox", "/system/bin/sync");
symlink("toolbox", "/system/bin/top");
symlink("toolbox", "/system/bin/touch");
symlink("toolbox", "/system/bin/touchinput");
symlink("toolbox", "/system/bin/umount");
symlink("toolbox", "/system/bin/uptime");
symlink("toolbox", "/system/bin/vmstat");
symlink("toolbox", "/system/bin/watchprops");
symlink("toolbox", "/system/bin/wipe");
symlink("/system/bin/mksh", "/system/bin/sh");
symlink("/system/fonts/Roboto-Regular.ttf","/system/fonts/DroidSans.ttf");
symlink("/system/fonts/Roboto-Bold.ttf","/system/fonts/DroidSans-Bold.ttf");
		
set_progress(0.52);

ui_print("root@ArchiDroid:~# Installing BusyBox");
set_perm(0, 1000, 0755, "/system/xbin/busybox");
run_program("/system/xbin/busybox", "--install", "-s", "/system/xbin");

ui_print("root@ArchiDroid:~# Flashing CSC Content");
package_extract_dir("_archidroid/csc", "/");

set_progress(0.53);

ui_print("root@ArchiDroid:~# Setting Permissions");
set_perm_recursive(0, 0, 0755, 0644, "/system");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm(0, 3003, 02750, "/system/bin/netcfg");
set_perm(0, 3004, 02755, "/system/bin/ping");
set_perm(0, 2000, 06750, "/system/bin/run-as");
set_perm(1000, 1000, 0755, "/system/bin/sysro");
set_perm(1000, 1000, 0755, "/system/bin/sysrw");
set_perm_recursive(1002, 1002, 0755, 0440, "/system/etc/bluetooth");
set_perm(0, 0, 0755, "/system/etc/bluetooth");
set_perm(1000, 1000, 0640, "/system/etc/bluetooth/auto_pairing.conf");
set_perm(3002, 3002, 0444, "/system/etc/bluetooth/blacklist.conf");
set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
set_perm(0, 0, 0555, "/system/etc/init.post_boot.sh");
set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
set_perm(0, 2000, 0755, "/system/vendor");
set_perm(0, 2000, 0755, "/system/vendor/etc");
set_perm(0, 2000, 0755, "/system/vendor/etc/nxp");
set_perm(0, 2000, 0755, "/system/vendor/etc/nxp/BargeIn");
set_perm(0, 2000, 0755, "/system/vendor/etc/nxp/mVoIP");
set_perm(0, 2000, 0755, "/system/vendor/etc/nxp/mVoIPSec");
set_perm(0, 2000, 0755, "/system/vendor/firmware");
set_perm(0, 2000, 0755, "/system/vendor/lib");
set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor/lib/drm");
set_perm(0, 0, 0644, "/system/vendor/lib/drm/libdrmwvmplugin.so");
set_perm_recursive(0, 2000, 0755, 0644, "/system/vendor/pittpatt");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.7/left_eye-y0-yi45-p0-pi45-r0-ri20.lg_32/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.7/nose_base-y0-yi45-p0-pi45-r0-ri20.lg_32/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/multi_pose_face_landmark_detectors.7/right_eye-y0-yi45-p0-pi45-r0-ri20.lg_32-2/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.6/head-y0-yi45-p0-pi45-r0-ri30.4a-v24/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.6/head-y0-yi45-p0-pi45-rn30-ri30.5-v24/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/detection/yaw_roll_face_detectors.6/head-y0-yi45-p0-pi45-rp30-ri30.5-v24/full_model.bin");
set_perm(0, 0, 0644, "/system/vendor/pittpatt/models/recognition/face.face.y0-y0-22-b-N/full_model.bin");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm(0, 0, 06755, "/system/xbin/su");
set_perm(1000, 1000, 0771, "/data");
set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");

set_progress(0.54);


##############
### KERNEL ###
##############

# We need to make sure that current kernel is CM-based to prevent random zygote kernel panics
ui_print("root@ArchiDroid:~# Cleaning Old Kernel");
assert(package_extract_file("boot.img", "/tmp/boot.img"),
write_raw_image("/tmp/boot.img", "/dev/block/mmcblk0p5"));

### STOCK CM ###
if file_getprop("/tmp/aroma-data/kernels.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing Stock Kernel");
	
	# Not needed since zygote kernel panic fix
endif;

set_progress(0.61);


###########
### DPI ###
###########

### 240 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Applying 240 DPI Fixes");
	package_extract_file("_archidroid/dpi/240dpi.sh", "/tmp/240dpi.sh");
	set_perm(0, 0, 0777, "/tmp/240dpi.sh");
	run_program("/tmp/240dpi.sh");
endif;
	
### 280 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Applying 280 DPI Fixes");
	package_extract_file("_archidroid/dpi/280dpi.sh", "/tmp/280dpi.sh");
	set_perm(0, 0, 0777, "/tmp/280dpi.sh");
	run_program("/tmp/280dpi.sh");
endif;

### 320 ###
if file_getprop("/tmp/aroma-data/dpi.prop","selected.0") == "3" then
	ui_print("root@ArchiDroid:~# Applying 320 DPI Fixes");
	package_extract_file("_archidroid/dpi/320dpi.sh", "/tmp/320dpi.sh");
	set_perm(0, 0, 0777, "/tmp/320dpi.sh");
	run_program("/tmp/320dpi.sh");
endif;

set_progress(0.62);

#############
### THEME ###
#############

if file_getprop("/tmp/aroma-data/theme.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Installing DreamTheme AOSP");
	package_extract_dir("_archidroid/themes/dreamtheme", "/sdcard/vrtheme");
	package_extract_dir("_archidroid/themes/vrtheme", "/sdcard/vrtheme");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/installtheme.sh");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/zip");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/cleanup.sh");
	set_perm(0, 0, 0755, "/sdcard/vrtheme/zipalign");
	run_program("/sdcard/vrtheme/installtheme.sh");
	run_program("/sdcard/vrtheme/cleanup.sh");
endif;

if file_getprop("/tmp/aroma-data/theme.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Installing Stock Theme");
	# Not needed, haha!
endif;


############
### AC!D ###
############

if file_getprop("/tmp/aroma-data/acid.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Installing AC!D Audio Technology");

	### IMPORTANT ###
	package_extract_dir("_archidroid/acid/system", "/system");
	### IMPORTANT ###

	delete("/system/app/DSPManager.apk");

	package_extract_file("_archidroid/acid/TAS.sh", "/tmp/TAS.sh");
	set_perm(0, 0, 0777, "/tmp/TAS.sh");
	run_program("/tmp/TAS.sh");

	set_perm(0, 2000, 0755, "/system/bin/aaengine");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/beatsbass");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/beatsnormal");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_gec");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_gec_bt");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_gec_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_ibeats");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_ibeats_solo");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_ibeats_solo_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_ibeats_studio");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/basimage_ibeats_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_gec");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_gec_bt");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_gec_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_ibeats");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_ibeats_solo");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_ibeats_solo_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_ibeats_studio");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/dynimage_ibeats_x");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_beatbox_bt");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_beats_wireless_bt");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_gec");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_gec_bt");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_htc_earbud");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_htc_midtier");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_ibeats");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_ibeats_solo");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_ibeats_solo_v2");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/image_ibeats_v2");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/load_mg_driver");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/load_sony_driver");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/mm-audio-acdb-test");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/mm-audio-native-test");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/pm_snd");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/snd");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/snd8k");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/snd3008");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/sony_sysd");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/sound");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/sound7x30");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/sound8x60");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/sound8960");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/spkamp");
	set_perm_recursive(0, 2000, 0755, 0755, "/system/bin/xaplay");

	#package_extract_file("_archidroid/acid/fix_permissions.sh", "/tmp/fix_permissions.sh");
	#set_perm(0, 0, 0755, "/tmp/fix_permissions.sh");
	#run_program("/tmp/fix_permissions.sh");
	#delete("/tmp/fix_permissions.sh");

	delete("/tmp/TAS.sh");
endif;

set_progress(0.65);


###############################
### ArchiDroid Audio Tweaks ###
###############################

if file_getprop("/tmp/aroma-data/acid2.prop","selected.0") == "1" then
	if file_getprop("/tmp/aroma-data/preset.prop","selected.0") == "1" then
		ui_print("root@ArchiDroid:~# Installing Archi's Audiophile preset for AwesomeBeats");
		package_extract_dir("_archidroid/presets/awesomebeats", "/");
	endif;
endif;

set_progress(0.66);


##############
### TWEAKS ###
##############

### ArchiDroid Tweaks ###
ui_print("root@ArchiDroid:~# Applying ArchiDroid Tweaks");

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Applying HD Voice Tweak");
	package_extract_dir("_archidroid/tweaks/hdvoice", "/");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.2") == "1" then
	ui_print("root@ArchiDroid:~# Applying build.prop Tweaks");
	package_extract_file("_archidroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
	set_perm(0, 0, 0777, "/tmp/tweaks.sh");
	run_program("/tmp/tweaks.sh");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Applying Beep Sound");
	package_extract_dir("_archidroid/tweaks/beep", "/");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Applying ArchiDroid Bootanimation");
	package_extract_dir("_archidroid/tweaks/bootani", "/");
endif;

if file_getprop("/tmp/aroma-data/architweaks.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Applying Extended Framework");
	delete_recursive("/system/app/FlashBarService.odex");
	delete_recursive("/data/data/com.sec.android.app.FlashBarService");
	package_extract_dir("_archidroid/tweaks/exframework", "/");
	set_perm_recursive(0, 0, 0755, 0644, "/system/framework");
	set_perm_recursive(0, 0, 0755, 0644, "/system/app");
endif;

set_progress(0.7);

#############
### MODEM ###
#############

package_extract_file("_archidroid/modem/flash_image", "/tmp/flash_image");
set_perm(0, 0, 0777, "/tmp/flash_image");

if file_getprop("/tmp/aroma-data/modem.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing XXUFME7 Modem");
	assert(package_extract_file("_archidroid/modem/xxufme7.bin", "/tmp/modem.bin"),
	run_program("/tmp/flash_image", "/dev/block/mmcblk0p7", "/tmp/modem.bin"),
	delete("/tmp/modem.bin"));
endif;

if file_getprop("/tmp/aroma-data/modem.prop","selected.0") == "2" then
	ui_print("root@ArchiDroid:~# Flashing XXEMG4 Modem");
	assert(package_extract_file("_archidroid/modem/xxemg4.bin", "/tmp/modem.bin"),
	run_program("/tmp/flash_image", "/dev/block/mmcblk0p7", "/tmp/modem.bin"),
	delete("/tmp/modem.bin"));
endif;

delete("/tmp/flash_image");

set_progress(0.75);


##############
### XPOSED ###
##############

if file_getprop("/tmp/aroma-data/xposed.prop","selected.0") == "1" then

	ui_print("root@ArchiDroid:~# Including Xposed Framework");
	package_extract_dir("_archidroid/apps/xposed/xposed", "/");
	
	if file_getprop("/tmp/aroma-data/xposed2.prop","item.0.1") == "1" then
		ui_print("root@ArchiDroid:~# Including App Settings Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/appsettings", "/");
	endif;
	
	if file_getprop("/tmp/aroma-data/xposed2.prop","item.0.2") == "1" then
		ui_print("root@ArchiDroid:~# Including Call Recording Xposed Module");
		package_extract_dir("_archidroid/apps/xposed/callrecording", "/");
	endif;
	
endif;

set_progress(0.76);


################
### RECOVERY ###
################

### PHILZ ###
if file_getprop("/tmp/aroma-data/recovery.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Flashing PhilZ Recovery");
	assert(package_extract_file("philz.img", "/tmp/recovery.img"),
	write_raw_image("/tmp/recovery.img", "/dev/block/mmcblk0p6"));
endif;

set_progress(0.77);


###########
### OTA ###
###########

if file_getprop("/tmp/aroma-data/ota.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Applying ArchiDroid OTA");
	package_extract_file("_archidroid/ota/ota.sh", "/tmp/ota.sh");
	set_perm(0, 0, 0777, "/tmp/ota.sh");
	run_program("/tmp/ota.sh");
	package_extract_dir("_archidroid/ota/app", "/");
endif;

set_progress(0.78);


################
### KEYBOARD ###
################

### TOUCHPAL ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "1" then
delete("/system/app/SamsungIME.apk");
ui_print("root@ArchiDroid:~# Installing TouchPal Keyboard");
package_extract_dir("_archidroid/apps/touchpal", "/");
endif;

### HACKERS ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "2" then
ui_print("root@ArchiDroid:~# Installing Hacker's Keyboard");
delete("/system/app/SamsungIME.apk");
package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### BOTH ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "3" then
ui_print("root@ArchiDroid:~# Installing TouchPal + Hacker's Keyboard");
delete("/system/app/SamsungIME.apk");
package_extract_dir("_archidroid/apps/touchpal", "/");
package_extract_dir("_archidroid/apps/hackers", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/keyboard.prop","selected.0") == "4" then
ui_print("root@ArchiDroid:~# Installing Stock Keyboard");
# Not needed, haha!
endif;

set_progress(0.79);


################
### LAUNCHER ###
################

### NOVA ###
if file_getprop("/tmp/aroma-data/launcher.prop","selected.0") == "1" then
ui_print("");
ui_print("");
ui_print("root@ArchiDroid:~# Installing Nova Launcher");
#delete("/system/app/SecLauncher2.apk");
package_extract_dir("_archidroid/apps/nova", "/");
endif;

### STOCK ###
if file_getprop("/tmp/aroma-data/launcher.prop","selected.0") == "2" then
ui_print("");
ui_print("");
ui_print("root@ArchiDroid:~# Installing Stock Launcher");
# Not needed, haha!
endif;

set_progress(0.8);


#############
### GAPPS ###
#############

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Calendar");
	package_extract_dir("_archidroid/apps/gcalendar", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.2") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Chrome");
	package_extract_dir("_archidroid/apps/gchrome", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Ears");
	package_extract_dir("_archidroid/apps/gears", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Keep");
	package_extract_dir("_archidroid/apps/gkeep", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Mail");
	package_extract_dir("_archidroid/apps/gmail", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.6") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Maps");
	package_extract_dir("_archidroid/apps/gmaps", "/");
endif;

if file_getprop("/tmp/aroma-data/gapps.prop","item.0.7") == "1" then
	ui_print("root@ArchiDroid:~# Installing Google Voice");
	package_extract_dir("_archidroid/apps/gvoice", "/");
	delete("/system/app/VoiceSearchStub.apk");
	delete("/system/app/GoogleSearchWidget.apk");
	delete("/system/app/QuickSearchBox.apk");
endif;

set_progress(0.85);


###############
### TWEAKS2 ###
###############
	
	
############
### APPS ###
############

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.1") == "1" then
	ui_print("root@ArchiDroid:~# Installing Titanium Backup");
	package_extract_dir("_archidroid/apps/titaniumbackup", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.2") == "1" then
	ui_print("root@ArchiDroid:~# Installing ZRAM Status");
	package_extract_dir("_archidroid/apps/zramstatus", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.3") == "1" then
	ui_print("root@ArchiDroid:~# Installing Greenify");
	package_extract_dir("_archidroid/apps/greenify", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.4") == "1" then
	ui_print("root@ArchiDroid:~# Installing LMT");
	package_extract_dir("_archidroid/apps/lmt", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.5") == "1" then
	ui_print("root@ArchiDroid:~# Installing MXPlayer");
	package_extract_dir("_archidroid/apps/mxplayer", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.6") == "1" then
	ui_print("root@ArchiDroid:~# Installing BetterBatteryStats");
	package_extract_dir("_archidroid/apps/betterbatterystats", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.7") == "1" then
	ui_print("root@ArchiDroid:~# Installing CoolTool");
	package_extract_dir("_archidroid/apps/cooltool", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.8") == "1" then
	ui_print("root@ArchiDroid:~# Installing Root Browser");
	package_extract_dir("_archidroid/apps/rootbrowser", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.9") == "1" then
	ui_print("root@ArchiDroid:~# Installing Adobe Flash Player");
	package_extract_dir("_archidroid/apps/adobeflash", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.10") == "1" then
	ui_print("root@ArchiDroid:~# Installing YouTube");
	package_extract_dir("_archidroid/apps/youtube", "/");
endif;

if file_getprop("/tmp/aroma-data/archiapps.prop","item.0.11") == "1" then
	ui_print("root@ArchiDroid:~# Installing Android Terminal Emulator");
	package_extract_dir("_archidroid/apps/terminal", "/");
endif;

set_progress(0.90);


# One more fix to logcat
ui_print("root@ArchiDroid:~# Syncing System");
#set_perm(1000, 1000, 0771, "/data");
#set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
#set_perm_recursive(0, 0, 0771, 0660, "/data/data");
run_program("/sbin/sync");

set_progress(0.92);


####################
### CROSSBREADER ###
####################

if file_getprop("/tmp/aroma-data/breeder.prop","selected.0") == "1" then
	ui_print("root@ArchiDroid:~# Installing CrossBreeder");
	
	# Freeze Fix
	unmount("/system");
	unmount("/data");

	package_extract_dir("setup_crossbreeder", "/tmp"); 

set_perm_recursive(0, 0, 0755, 0755, "/tmp");
run_program("/sbin/busybox","chmod","-R","0755","/tmp");
run_program("/sbin/busybox","chown","-R","0.0","/tmp");
set_perm(0, 0, 0755, "/tmp/busybox");
run_program("/tmp/busybox","chmod","-R","0755","/tmp");
run_program("/tmp/busybox","chown","-R","0.0","/tmp");
run_program("/tmp/busybox","mount","/system");
run_program("/sbin/busybox","mount","/system");
run_program("/tmp/busybox","mount","-o","rw,remount","/system");
run_program("/sbin/busybox","mount","-o","rw,remount","/system");
run_program("/tmp/busybox","mount","/data");
run_program("/sbin/busybox","mount","/data");
run_program("/tmp/busybox","mount","-o","rw,remount","/data");
run_program("/sbin/busybox","mount","-o","rw,remount","/data");

run_program("/tmp/busybox","rm","-fr","/system/etc/CrossBreeder");

run_program("/tmp/busybox","mkdir","-p","/system/etc/CrossBreeder");
run_program("/tmp/busybox","cp","-f","/tmp/tune2fs","/system/etc/CrossBreeder");
#run_program("/tmp/busybox","cp","-f","/tmp/libiconv.so.2","/system/etc/CrossBreeder");
run_program("/tmp/busybox","cp","-f","/tmp/busybox","/system/etc/CrossBreeder");
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");
run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

run_program("/tmp/busybox", "echo", "Restore", "started.");
run_program("/tmp/restore_dnsmasq.sh");
run_program("/tmp/busybox","echo","After","Restore");
#run_program("/tmp/busybox","mv","-f","/system/etc/hosts","/system/etc/hosts.CBBAK");
	package_extract_dir("system_crossbreeder", "/system");
run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
#run_program("/tmp/busybox","cp","-f","/system/etc/CrossBreeder/dnsmasq","/system/bin/dnsmasq.bin");
delete("/system/bin/dnsmasq.bin");
run_program("/tmp/busybox", "ls", "-l", "/system/bin/dnsmasq");; 
set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");

run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

#set_perm_recursive(0, 0, 0711, 0444, "/system/etc/CrossBreeder/root");

#run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","-R","0444","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root");
#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root/errors");

run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/dnrd_root");
run_program("/tmp/busybox","chmod","-R","0644","/system/etc/CrossBreeder/dnrd_root");
run_program("/tmp/busybox","chmod","0755","/system/etc/CrossBreeder/dnrd_root");

#set_perm(0, 0, 0755, "/system/etc/init.d/zzCrossBreeder_initd");
set_perm(0, 2000, 0755, "/system/xbin/haveged");
delete("/system/xbin/CB_FileLock");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/busybox");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/dnrd.10053");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCrossBreeder");
set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCHECK_NET_DNS");
set_perm(0, 0, 0755, "/system/bin/dnsmasq");
set_perm(0, 0, 0755, "/system/bin/dnsmasq_dhcp");
#set_perm(0, 0, 0644, "/system/etc/CrossBreeder/dnsmasq-host");
set_perm(0, 0, 0644, "/system/etc/resolv.conf");
set_perm(0, 0, 0644, "/system/etc/hosts");
set_perm(0, 0, 0644, "/system/etc/CrossBreeder/hosts");
delete("/system/etc/init.d/00CrossBreeder");
delete("/system/etc/init.d/zzCrossBreeder");
delete("/system/etc/init.d/zzCrossBreeder_initd");
#delete("/system/etc/CrossBreeder/dnsmasq");

set_perm(0, 0, 0755, "/system/etc/install-recovery.sh");
run_program("/tmp/busybox","mv","-f","/system/etc/install-recovery.sh.CBBAK","/system/etc/install-recovery.sh");
run_program("/tmp/install_init_entries.sh");
#run_program("/tmp/install_hw_entries.sh");
#run_program("/sbin/busybox","mv","-f","/system/etc/hw_config.sh.CBBAK","/system/etc/hw_config.sh");
run_program("/tmp/busybox","mv","-f","/system/bin/debuggerd.CBBAK","/system/bin/debuggerd");
set_perm(0, 2000, 0755, "/system/bin/debuggerd");
run_program("/tmp/install_debuggerd.sh");

run_program("/tmp/busybox","mv","/system/xbin/rngd","/system/xbin/rngd.bak");
run_program("/tmp/busybox","rm","-fr","/data/rngd.pid");
run_program("/tmp/busybox","mkdir","/data/rngd.pid/");
run_program("/tmp/busybox","chown","0:0","/data/rngd.pid");
run_program("/tmp/busybox","chmod","-R","500","/data/rngd.pid");
set_perm_recursive(0, 0, 0500, 0500, " /data/rngd.pid/ ");
run_program("/tmp/busybox","mv","/system/xbin/qrngd","/system/xbin/qrngd.bak");
run_program("/tmp/busybox","mv","/system/bin/qrngd","/system/bin/qrngd.bak");
run_program("/tmp/REMOVE_TETHER_BOOST");
run_program("/tmp/busybox","mv","-f","/system/etc/dnsmasq.conf.CBBAK","/system/etc/dnsmasq.conf");
run_program("/tmp/busybox","sync");
#run_program("/tmp/busybox","umount","/system");
run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
run_program("/tmp/busybox","sync");

run_program("/tmp/busybox","umount","/data");
#run_program("/tmp/busybox","umount","/cache");
run_program("/tmp/busybox","umount","/sd-ext");

	# Freeze fix
	sleep (1);
	assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p9", "/system") || ui_print("(system is mounted already)"));
	assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));
endif;

set_progress(0.98);


run_program("/sbin/sync");

set_progress(0.99);

ui_print("root@ArchiDroid:~# Unmounting partitions");
assert(unmount("/data") || ui_print("(data is unmounted already)"));
assert(unmount("/system") || ui_print("(system is unmounted already)"));

ui_print("===================================");
ui_print("  ArchiDroid Flashed Successfully  ");
ui_print("Please share your experience on XDA");
ui_print("===================================");
run_program("/sbin/busybox", "cp", "/tmp/recovery.log", "/sdcard/recovery.log");
set_progress(1.0);
